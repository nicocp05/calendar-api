{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","hooks/useForm.js","components/auth/LoginScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventCleanActive","eventUpdated","eventDelete","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","Navbar","name","useSelector","state","auth","useDispatch","className","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus","clone","initEvent","id","Date","getTime","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","useState","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","target","value","closeModal","isOpen","onRequestClose","closeTimeoutMS","style","overlayClassName","onSubmit","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","a","eventId","resp","json","ok","msg","console","log","getState","eventCreated","userId","eventStartAddNew","onChange","minDate","placeholder","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","setItem","onSelectSlot","selectable","view","components","useForm","initialState","values","setValues","reset","LoginScreen","loginName","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerPassword1","registerPassword2","formRegisterValues","handleRegisterInputChange","password","userCreated","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc253eb7.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchWithoutToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport const fetchWithToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}","export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Logout event',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventCleanActive: '[event] Clean active event ',\r\n    eventUpdate: '[event] Update event',\r\n    eventDelete: '[event] Update delete',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStarRegister: '[auth] Star register',\r\n    authStarTokenRenew: '[auth] Star token renew',\r\n    authLogout: '[auth] Logout'\r\n\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map( e => ({\r\n        ...e,\r\n        end: moment( e.end ).toDate(),\r\n        start: moment( e.start ).toDate()\r\n    }));\r\n\r\n}","import { types } from '../types/types';\r\nimport { fetchWithToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { id, name } = getState().auth;\r\n        \r\n        try {\r\n            \r\n            const resp = await fetchWithToken( 'events', event, 'POST' );\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ) {\r\n                event.eventId = body.eventCreated.eventId;\r\n                event.user = {\r\n                    userId: id,\r\n                    name\r\n                }\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n\r\n        } catch (error) {\r\n            \r\n            console.log(error);\r\n\r\n        }\r\n\r\n\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport const eventSetActive = ( event ) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventCleanActive = () => ({\r\n    type: types.eventCleanActive\r\n});\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchWithToken( `events/${event.eventId}`, event, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdate,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { eventId } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n\r\n            const resp = await fetchWithToken( `events/${eventId}`, {}, 'DELETE' );\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ) {\r\n                dispatch( eventDelete( ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventDelete = () => ({\r\n    type: types.eventDelete\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchWithToken( 'events' )\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents( body.events );\r\n            \r\n            dispatch( eventLoaded( events ) );\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n});","import Swal from 'sweetalert2';\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from '../types/types';\r\nimport { eventLogout } from './events';\r\n\r\n\r\nexport const authStartLogin = ( name, password ) => {\r\n    return async ( dispatch ) => {\r\n        \r\n        const resp = await fetchWithToken( 'auth/login', { name, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                name: body.name,\r\n                id: body.id\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = ( name, password ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        const resp = await fetchWithoutToken( 'auth/new', { name, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        console.log(body);\r\n        \r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                name: body.userCreated.name,\r\n                id: body.userCreated.userId\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchWithToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                id: body.id,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = ( user ) => ({\r\n\r\n    type: types.authLogin,\r\n    payload: user\r\n\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n\r\n    }\r\n\r\n}\r\n\r\nconst logout = (  ) => ({ type: types.authLogout });","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                Bienvenido { name }\r\n            </span>\r\n            <button className=\"btn btn-outline-danger\" onClick={ handleLogout }>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    \r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => ({\r\n   type: types.uiOpenModal \r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n   type: types.uiCloseModal \r\n});","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventStartAddNew, eventCleanActive, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    id: new Date().getTime(),\r\n    title:'',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        \r\n        if( activeEvent ) {\r\n            setFormValues( activeEvent )\r\n        } else {\r\n            setFormValues( initEvent )\r\n        }\r\n        \r\n    }, [ activeEvent, setFormValues ]);\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if( momentStart.isSameOrAfter( momentEnd ) ) {\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error')\r\n        }\r\n\r\n        if( title.trim().length < 2 ) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if( activeEvent ) {\r\n            dispatch( eventStartUpdate( formValues ) );\r\n        } else {\r\n            dispatch( eventStartAddNew( formValues ) );\r\n        }\r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventCleanActive() );\r\n\r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            onRequestClose={ closeModal }\r\n            closeTimeoutMS={200}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-bg\"\r\n        >\r\n            <h1> { ( !activeEvent ) ? 'Nuevo evento' : 'Editar evento' } </h1>\r\n            <hr />\r\n            <form className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={ `form-control ${ !titleValid && 'is-invalid' }` }\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventCleanActive } from '../../actions/events';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() )\r\n        dispatch( eventCleanActive() );\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={ handleClickNew }>\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\" onClick={ handleDelete }>\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Eliminar</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\n\r\nimport { Navbar } from '../ui/Navbar.js';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent.js';\r\nimport { CalendarModal } from './CalendarModal.js';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventCleanActive, eventSetActive, eventStartLoading } from '../../actions/events.js';\r\nimport { AddNewFab } from '../ui/AddNewFab.js';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab.js';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { id } = useSelector(state => state.auth)\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() )\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive( e ) );\r\n    } \r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    } \r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventCleanActive() );\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n\r\n        const style = {\r\n            backgroundColor: ( event.user.userId === id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                ( activeEvent ) && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { authStartLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        loginName: '',\r\n        loginPassword: ''\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        registerName: '',\r\n        registerPassword1: '',\r\n        registerPassword2: ''\r\n    });\r\n\r\n    const { registerName, registerPassword1, registerPassword2 } = formRegisterValues;\r\n\r\n    const { loginName, loginPassword } = formLoginValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( authStartLogin( loginName, loginPassword ) );\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( registerPassword1 !== registerPassword2 ) {\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\r\n        }\r\n\r\n        dispatch( startRegister( registerName, registerPassword1 ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Usuario\"\r\n                                name=\"loginName\"\r\n                                value={ loginName }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"loginPassword\"\r\n                                value={ loginPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Usuario\"\r\n                                name=\"registerName\"\r\n                                value={ registerName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"registerPassword1\"\r\n                                value={ registerPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"registerPassword2\"\r\n                                value={ registerPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PrivateRoute } from '../routers/PrivateRoute';\r\nimport { PublicRoute } from '../routers/PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, id } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( startChecking() );\r\n\r\n    }, [dispatch]);\r\n\r\n    if( checking ) {\r\n        return (<h5>Espere...</h5>)\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                        <PublicRoute isAuthenticated={ !!id } exact path=\"/login\" component={ LoginScreen } />\r\n                        <PrivateRoute isAuthenticated={ !!id } exact path=\"/\" component={ CalendarScreen } />  \r\n                        <Redirect to=\"/\" /> \r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true\r\n} \r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        \r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgColor: '#fafafa',\r\n//     user: {\r\n//         id: '1',\r\n//         name: 'Nico'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n    \r\n        case types.eventCleanActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.eventId === action.payload.eventId ) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDelete:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.eventId !== state.activeEvent.eventId )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\"\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});\r\n\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport '../src/styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}